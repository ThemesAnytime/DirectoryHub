@import "../../settings/mixins/common";

.radio-block {
  display: block;
  position: relative;

  &-label {
    cursor: pointer;
    display: block;
    text-align: center;
    font-size: 17px;
    line-height: 20px;
    padding: 10px 15px;
    border: 1px solid rgba(153, 153, 153, 0.5);
    border-radius: $border-radius;
  }

  &-radio {
    position: absolute;
    top:0;
    opacity: 0;
    height: 0;

    &:checked + .radio-block-label {
      border-color: $color-primary;
      box-shadow: inset 0 0 0 .5px $color-primary;
    }
  }

  &-description {
    text-align: center;
    color: #999999;
    font-size: 14px;
    display: block;
  }
}

@mixin checkbox-toggle(
  $checkbox-toggle-off-color: #e2ebf4,
  $checkbox-toggle-on-color: $color-success,
  $checkbox-toggle-transition: cubic-bezier(0,1,0.5,1),
  $checkbox-toggle-transition-duration: .3s
) {

  input[type="checkbox"] {
    &[disabled] ~ label {
      color: $text-color-light;
    }

    &:focus ~ label,
    &:hover ~ label {
      color: $text-color;

      .checkbox-toggle-switch {
        background-color: $checkbox-toggle-off-color;

        &:after {
          background-color: #b2bbcf;
          color: $text-color;
        }
      }
    }

    &:hover ~ label {
      color: $text-color;
    }

    &:checked {
      ~ label {
        &:hover {
          color: $text-color;
        }

        .checkbox-toggle-switch {
          &:after {
            color: #fff;
            background: $checkbox-toggle-on-color;
          }
        }
      }

      &:focus, &:hover {
        ~ label {
          .checkbox-toggle-switch {
            background-color: $checkbox-toggle-off-color;
          }
        }
      }
    }
  }

  label {
    .checkbox-toggle-label {
      flex: 1;
    }

    .checkbox-toggle-switch {
      background: $checkbox-toggle-off-color;

      &:before {
        font-weight: 500;
        color: $text-color;
      }

      &:after {
        font-weight: 500;
        background-color: #b2bbcf;
        transition: transform $checkbox-toggle-transition-duration $checkbox-toggle-transition;
        color: $text-color;
      }
    }
  }
}

@mixin checkbox-toggle-appearance(
  $checkbox-toggle-width: 104px,
  $checkbox-toggle-height: 28px,
  $checkbox-toggle-border-radius: $border-radius,
  $checkbox-toggle-offset: 2px,
  $checkbox-toggle-label-font-size: 14px,
  $checkbox-toggle-switch-font-size: 12px
){
  $checkbox-toggle-switch-width: $checkbox-toggle-width / 2;

  input[type="checkbox"] {
    &:checked {
      ~ label {
        .checkbox-toggle-switch {
          &:after {
            transform: translate3d($checkbox-toggle-width - ($checkbox-toggle-switch-width + $checkbox-toggle-offset), 0, 0);
          }
        }
      }
    }
  }

  label {
    cursor: pointer;
    font-size: $checkbox-toggle-label-font-size;
    padding-left: 15px;

    .checkbox-toggle-switch {
      height: $checkbox-toggle-height;
      flex: 0 0 $checkbox-toggle-width;
      border-radius: $checkbox-toggle-border-radius;

      &:before {
        left: $checkbox-toggle-width / 2;
        font-size: $checkbox-toggle-switch-font-size;
        line-height: $checkbox-toggle-height;
        width: $checkbox-toggle-width / 2;
        padding: 0 12px;
      }

      &:after {
        top: $checkbox-toggle-offset;
        left: $checkbox-toggle-offset;
        border-radius: $checkbox-toggle-border-radius;
        width: $checkbox-toggle-switch-width - $checkbox-toggle-offset;
        line-height: $checkbox-toggle-height - ($checkbox-toggle-offset * 2);
        font-size: $checkbox-toggle-switch-font-size;
      }
    }
  }
}

@mixin switch-toggle(
  $switch-toggle-body-background-color: #e2ebf4,
  $switch-toggle-line-off-background-color: #ccd4e2
) {
  display: inline-flex;
  align-items: center;

  > label {
    + label {
      padding-left: 10px;
    }
  }

  &.switch-toggle-disabled {
    opacity: .5;
  }

  .switch-toggle-body {
    display: inline-block;
    background-color: $switch-toggle-body-background-color;
  }

  .switch-toggle-input {
    position: absolute;
    visibility: hidden;

    + .switch-toggle-switch {
      position: relative;
      border-radius: 50%;
      background-color: $switch-toggle-line-off-background-color;
      vertical-align: middle;
      display: inline-block;
      cursor: pointer;

      &::before,
      &::after {
        content: "";
        position: absolute;
        transition: 0.35s;
      }

      &::before {
        top: 0;
        left: 0;
        height: 100%;
        width: 20%;
        border-radius: 10px;
        background-color: $switch-toggle-line-off-background-color;
      }

      &::after {
        left: -6px;
        top: 50%;
        border-radius: 50%;
        background-color: #b2bbcf;
        border: 1px solid transparent;
        transform: translateY(-50%);
        opacity: 1;
      }

      &:hover {
        &::after {
          transform: translateY(-50%) scale(1.1);
        }
      }
    }

    &:checked {
      + .switch-toggle-switch {
        background-color: $color-success;

        &::before {
          width: 100%;
          background-color: $color-success;
        }

        &::after {
          background-color: #b2bbcf;
          border: 1px solid #e2ebf4;
        }
      }
    }
  }
}

@mixin switch-toggle-appearance(
  $input-switch-width: 3rem,
  $input-switch-height: 26px,
  $input-switch-border-radius: 20px,
  $input-switch-bar-height: 8px,
  $input-switch-bar-thumb-size: 20px
) {
  $label-font-size: (($input-switch-height / 100) * 58); // 58%

  > label {
    + label {
      padding-left: 10px;
      line-height: $input-switch-height;
      @include rem-calc($label-font-size);
    }
  }

  .switch-toggle-body {
    border-radius: $input-switch-border-radius;
    height: $input-switch-height;
  }

  .switch-toggle-input {
    + .switch-toggle-switch {
      height: $input-switch-bar-height;
      width: $input-switch-width;
      margin-right: 10px;
      margin-left: 10px;
      border-radius: 8px;
      transition: 0.3s 0.05s;
      top: calc(50% - 13px);

      &::before,
      &::after {
        transition: 0.35s;
      }

      &::before {
        top: 0;
        left: 0;
        height: 100%;
        width: 20%;
        border-radius: 10px;
      }

      &::after {
        left: -6px;
        top: 50%;
        height: $input-switch-bar-thumb-size - 2px;
        width: $input-switch-bar-thumb-size - 2px;
        transform: translateY(-50%);
      }

      &:hover {
        &::after {
          transform: translateY(-50%) scale(1.1);
        }
      }
    }

    &:checked {
      + .switch-toggle-switch {
        &::before {
          width: 100%;
        }

        &::after {
          left: calc(100% - (#{$input-switch-bar-thumb-size} - 7px));
          height: $input-switch-bar-thumb-size;
          width: $input-switch-bar-thumb-size;
        }
      }
    }
  }
}

@mixin switch-outline-toggle(
  $switch-toggle-switch-off-color: #b2bbcf,
  $switch-toggle-switch-on-color: $color-success
) {
  display: inline-flex;
  align-items: center;

  > label {
    + label {
      padding-left: 10px;
    }
  }

  &.switch-outline-toggle-disabled {
    opacity: .5;
  }

  .switch-outline-toggle-body {
    display: inline-block;
    background-color: #fff;
    border: 1px solid $switch-toggle-switch-off-color;
  }

  .switch-outline-toggle-input {
    position: absolute;
    visibility: hidden;

    + .switch-outline-toggle-switch {
      position: relative;
      vertical-align: middle;
      display: inline-block;
      cursor: pointer;

      &::before,
      &::after {
        content: "";
        position: absolute;
        transition: 0.35s;
      }

      &::before {
        top: 0;
        left: 0;
        height: 100%;
        width: 20%;
        border-radius: 10px;
      }

      &::after {
        left: -6px;
        top: 50%;
        border-radius: 50%;
        background-color: #b2bbcf;
        border: 1px solid transparent;
        transform: translateY(-50%);
        opacity: 1;
      }

      &:hover {
        &::after {
          transform: translateY(-50%) scale(1.1);
        }
      }
    }

    &:checked {
      + .switch-outline-toggle-switch {
        &::before {
          width: 100%;
        }

        &::after {
          background-color: $switch-toggle-switch-on-color;
        }
      }
    }
  }
}

@mixin switch-outline-toggle-appearance(
  $input-switch-width: 2.5rem,
  $input-switch-height: 26px,
  $input-switch-border-radius: 20px,
  $input-switch-bar-height: 8px,
  $input-switch-bar-thumb-size: 20px
) {
  $label-font-size: (($input-switch-height / 100) * 58); // 58%

  > label {
    + label {
      padding-left: 10px;
      line-height: $input-switch-height;
      @include rem-calc($label-font-size);
    }
  }

  .switch-outline-toggle-body {
    border-radius: $input-switch-border-radius;
    height: $input-switch-height;
  }

  .switch-outline-toggle-input {
    + .switch-outline-toggle-switch {
      height: $input-switch-bar-height;
      width: $input-switch-width;
      margin-right: 10px;
      margin-left: 10px;
      border-radius: 8px;
      transition: 0.3s 0.05s;
      top: calc(50% - 13px);

      &::before,
      &::after {
        transition: 0.35s;
      }

      &::before {
        top: 0;
        left: 0;
        height: 100%;
        width: 20%;
        border-radius: 10px;
      }

      &::after {
        left: -7px;
        top: 50%;
        height: $input-switch-bar-thumb-size;
        width: $input-switch-bar-thumb-size;
        transform: translateY(-50%);
      }

      &:hover {
        &::after {
          transform: translateY(-50%) scale(1.1);
        }
      }
    }

    &:checked {
      + .switch-outline-toggle-switch {
        &::before {
          width: 100%;
        }

        &::after {
          left: calc(100% - (#{$input-switch-bar-thumb-size} - 7px));
          height: $input-switch-bar-thumb-size;
          width: $input-switch-bar-thumb-size;
        }
      }
    }
  }
}

.switch-toggle {
  @include switch-toggle();
  @include switch-toggle-appearance();

  &.switch-toggle-lg {
    @include switch-toggle-appearance(4rem, 36px, 26px, 12px, 30px);
  }

  &.switch-toggle-sm {
    @include switch-toggle-appearance(2rem, 22px, 10px, 7px, 16px);
  }
}

.switch-outline-toggle {
  @include switch-outline-toggle();
  @include switch-outline-toggle-appearance();

  &.switch-outline-toggle-lg {
    @include switch-outline-toggle-appearance(3.6rem, 36px, 26px, 12px, 30px);
  }

  &.switch-outline-toggle-sm {
    @include switch-outline-toggle-appearance(1.6rem, 22px, 10px, 7px, 16px);
  }
}

.checkbox-toggle {
  position: relative;

  *, *:before, *:after {
    box-sizing: border-box;
  }

  input[type="checkbox"] {
    opacity: 0;
    position: absolute;
    top: 0;
    left: 0;

    &[disabled] ~ label {
      pointer-events: none;

      .checkbox-toggle-switch {
        opacity: 0.5;
      }
    }

    &:checked {
      ~ label {
        .checkbox-toggle-switch {

          &:before {
            content: attr(data-unchecked);
            left: 0;
          }

          &:after {
            content: attr(data-checked);
          }
        }
      }
    }
  }

  label {
    user-select: none;
    position: relative;
    display: flex;
    align-items: center;

    .checkbox-toggle-label {
      flex: 1;
      padding-left: 15px;
    }

    .checkbox-toggle-switch {
      position: relative;

      &:before {
        content: attr(data-checked);
        position: absolute;
        top: 0;
        text-align: center;
      }

      &:after {
        content: attr(data-unchecked);
        position: absolute;
        z-index: 5;
        text-align: center;
        background: white;
        transform: translate3d(0,0,0);
      }
    }
  }

  @include checkbox-toggle;

  &:not(.checkbox-toggle-lg):not(.checkbox-toggle-sm) {
    @include checkbox-toggle-appearance(104px, 28px, $border-radius, 2px, 14px, 14px);
  }

  &.checkbox-toggle-sm {
    @include checkbox-toggle-appearance(80px, 21px, $border-radius, 2px, 11px, 9px);
  }

  &.checkbox-toggle-lg {
    @include checkbox-toggle-appearance(126px, 36px, $border-radius, 3px, 16px, 16px);
  }
}

.radio-group-toggle {
  display: inline-flex;
  width: 100%;

  input {
    position: absolute !important;
    clip: rect(0, 0, 0, 0);
    height: 1px;
    width: 1px;
    border: 0;
    overflow: hidden;
  }

  label {
    justify-content: center;
    display: inline-flex;
    flex-grow: 1;
    background-color: #fff;
    color: $text-color;
    font-size: 15px;
    padding: 6px 22px;
    transition: all 0.1s ease-in-out;
    border: 1px solid #b2bbcf;
    margin: 0;
    align-items: center;

    &:hover {
      cursor: pointer;
    }

    &:first-of-type {
      border-radius: 2px 0 0 2px;
    }

    &:last-of-type {
      border-radius: 0 2px 2px 0;
    }
  }

  input {
    &:checked + label {
      background: #b2bbcf;
      color: #fff;
    }
  }
}

.radio-group-toggle--success {
  label {
    border-color: $color-success;
    color: $color-success;
  }

  input {
    &:checked + label {
      background: $color-success;
    }
  }
}

.radio-group-toggle--azure-radiance {
  label {
    border-color: $color-azure-radiance;
    color: #007aff;
  }

  input {
    &:checked + label {
      background: $color-azure-radiance;
    }
  }
}
